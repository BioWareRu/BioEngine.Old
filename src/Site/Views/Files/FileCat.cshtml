@using System.Threading.Tasks
@using BioEngine.Site.Components.Url
@using BioEngine.Site.ViewComponents
@model BioEngine.Site.ViewModels.Files.FileCatViewModel
@inject UrlManager UrlManager
@{
    ViewBag.Title = @Model.Title;
    Layout = "~/Views/_Main.cshtml";
}

<div class="article__block">
    @(await Component.InvokeAsync<BreadcrumbsViewComponent>(Model.BreadCrumbs))
    <article class="article">
        <header class="article__header">
            <div class="article__title-wrap">
                <h2 class="article__title">@Model.FileCat.Title</h2>
            </div>
            <a class="article-list__title-image" href="@Model.ParentFilesUrl"
               title="@Model.FileCat.Parent.DisplayTitle">
                <img src="@Model.ParentIconUrl"
                     alt="@Model.FileCat.Parent.DisplayTitle">
            </a>
        </header>

        <div class="files">
            @foreach (var child in Model.Children)
            {
                <h3>Подкатегории</h3>
                <div class="files__cat">
                    <ul class="files__list">
                        <li class="files__item">
                            <h2 class="files__title">
                                <a class="files__link" href="@UrlManager.Files.CatPublicUrl(child.Cat)">@child.Cat.Title</a>
                            </h2>
                            <ul class="files__list">
                                @foreach (var article in child.LastEntities)
                                {
                                    <li class="files__item">
                                        <a class="files__link"
                                           href="@UrlManager.Files.PublicUrl(article)">
                                            @article.Title
                                        </a><br>
                                        @Html.Raw(article.Announce)
                                    </li>
                                }
                            </ul>
                        </li>
                    </ul>
                </div>
            }

        </div>
        <div class="files">
            <ul class="files__list">
                @foreach (var file in Model.LastFiles)
                {
                    <li class="files__item">
                        <a class="files__link" href="@UrlManager.Files.PublicUrl(file)">@Html.Raw(file.Title)</a>
                    </li>
                }
            </ul>
        </div>

    </article>
    @(await Component.InvokeAsync<PagerViewComponent>(new
      {
          pagerModel = new PagerModel(Model.CurrentPage, Model.TotalFiles, page => UrlManager.Files.CatPublicUrl(Model.FileCat, page), 20)
      }))
</div>